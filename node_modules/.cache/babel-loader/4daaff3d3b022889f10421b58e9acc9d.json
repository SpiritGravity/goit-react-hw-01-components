{"ast":null,"code":"var _jsxFileName = \"/Users/pro/Documents/React/goit-react-hw-01-components/src/components/FriendList/friendsList.jsx\";\nimport PropTypes from 'prop-types';\nimport friends from './friends.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst FriendList = (avatar, name, isOnline, id) => {\n  return friends.map(friend => /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"friend-list\",\n    children: /*#__PURE__*/_jsxDEV(\"li\", {\n      className: \"item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"status\",\n        children: [friend.isOnline, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }, this), friend.avatar, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"name\",\n        children: friend.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 6\n      }, this)]\n    }, friend.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 9\n  }, this));\n};\n\n_c = FriendList;\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    isOnline: PropTypes.bool.isRequired,\n    name: PropTypes.string.isRequired,\n    avatar: PropTypes.string.isRequired\n  }))\n};\nexport default FriendList;\n\nvar _c;\n\n$RefreshReg$(_c, \"FriendList\");","map":{"version":3,"sources":["/Users/pro/Documents/React/goit-react-hw-01-components/src/components/FriendList/friendsList.jsx"],"names":["PropTypes","friends","FriendList","avatar","name","isOnline","id","map","friend","propTypes","arrayOf","shape","number","isRequired","bool","string"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,gBAApB;;;AAEA,MAAMC,UAAU,GAAG,CAACC,MAAD,EAASC,IAAT,EAAeC,QAAf,EAAyBC,EAAzB,KAAgC;AAC/C,SACIL,OAAO,CAACM,GAAR,CAAaC,MAAD,iBACZ;AAAI,IAAA,SAAS,EAAG,aAAhB;AAAA,2BACC;AAAI,MAAA,SAAS,EAAG,MAAhB;AAAA,8BACD;AAAM,QAAA,SAAS,EAAG,QAAlB;AAAA,mBAA4BA,MAAM,CAACH,QAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADC,EAGJG,MAAM,CAACL,MAHH,eAIJ;AAAG,QAAA,SAAS,EAAG,MAAf;AAAA,kBAAuBK,MAAM,CAACJ;AAA9B;AAAA;AAAA;AAAA;AAAA,cAJI;AAAA,OAA8BI,MAAM,CAACF,EAArC;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,UADA,CADJ;AAYH,CAbD;;KAAMJ,U;AAcNA,UAAU,CAACO,SAAX,GAAuB;AACnBR,EAAAA,OAAO,EAAED,SAAS,CAACU,OAAV,CACLV,SAAS,CAACW,KAAV,CAAgB;AACdL,IAAAA,EAAE,EAAEN,SAAS,CAACY,MAAV,CAAiBC,UADP;AAEdR,IAAAA,QAAQ,EAAEL,SAAS,CAACc,IAAV,CAAeD,UAFX;AAGdT,IAAAA,IAAI,EAAEJ,SAAS,CAACe,MAAV,CAAiBF,UAHT;AAIdV,IAAAA,MAAM,EAAEH,SAAS,CAACe,MAAV,CAAiBF;AAJX,GAAhB,CADK;AADU,CAAvB;AAWA,eAAeX,UAAf","sourcesContent":["import PropTypes from 'prop-types';\nimport friends from './friends.json';\n\nconst FriendList = (avatar, name, isOnline, id) => {\n    return (\n        friends.map((friend) =>\n        <ul className = \"friend-list\"> \n         <li className = \"item\" key = {friend.id}> \n        <span className = \"status\">{friend.isOnline} </span>\n     {/* <img className = \"avatar\" src = {friend.avatar} alt=\"User avatar\" width=\"48\" /> */}\n    {friend.avatar}\n     <p className = \"name\">{friend.name}</p>\n    </li>\n    </ul>)\n   \n    )\n};\nFriendList.propTypes = {\n    friends: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.number.isRequired,\n          isOnline: PropTypes.bool.isRequired,\n          name: PropTypes.string.isRequired,\n          avatar: PropTypes.string.isRequired,\n        })\n      ),\n    };\n    \nexport default FriendList;"]},"metadata":{},"sourceType":"module"}